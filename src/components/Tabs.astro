---
export interface Props {
  activeColor: string;
  headings: string[];
  contents: string[];
}

const { headings, contents, activeColor = "#A741FF" } = Astro.props as Props;

// <Tabs
//         activeColor="purple"
//         headings={["NPM", "PNPM", "YARN"]}
//         contents={[
//           "$ npm create astro@latest",
//           "$ pnpm create astro@latest",
//           "$ yarn create astro",
//         ]}
---

<!-- Tabs -->
<div class="tabs">
  <ul class="tabs-header">
    {headings.map((heading) => <li class="glow-element">{heading}</li>)}
  </ul>
  <ul class="tabs-content">
    {contents.map((content) => <li class="tab">{content}</li>)}
  </ul>
</div>

<style>
  .tabs {
    margin-top: 30px;
  }

  .tabs-header {
    display: flex;
    background: #320036;
    color: #fff;
    padding: 10px 20px;
  }

  .tabs-header li {
    margin-right: 20px;
    cursor: pointer;
    transition: box-shadow 0.3 ease;
  }

  .tabs-header:hover {
    box-shadow: 5 5 300px 100px rgba(255, 0, 0, 0.7);
  }

  .tabs-content {
    font-size: 18px;
    padding: 20px;
    border: 1px solid #333;
    font-weight: bold;
    background: #f4f4f4;
  }
</style>

<!--Vanilla JS -->
<script define:vars={{ activeColor }}>
  function createTabs(element) {
    const header = element.querySelector(".tabs-header");
    const content = element.querySelector(".tabs-content");
    const tab_headers = [...header.children];
    const tab_contents = [...content.children];
    tab_contents.forEach((x) => (x.style.display = "none"));
    let current_tab_index = -1;

    function setTab(index) {
      if (current_tab_index > -1) {
        tab_headers[current_tab_index].style.fontWeight = 400;
        tab_headers[current_tab_index].style.color = "#fff";
        tab_contents[current_tab_index].style.display = "none";
      }
      tab_headers[index].style.fontWeight = 800;
      tab_headers[index].style.color = activeColor;
      tab_contents[index].style.display = "flex";
      current_tab_index = index;
    }

    let default_tab_index = tab_headers.findIndex((x) => {
      return [...x.classList].indexOf("default-tab") > -1;
    });

    default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
    setTab(default_tab_index);
    tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
  }

  // Run
  [...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
